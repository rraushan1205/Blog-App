// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(cuid())
  name       String
  email      String     @unique
  password   String
  posts      Post[]
  comments   Comment[]
  likedPosts Post[]     @relation("userLikes")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  PostLike   PostLike[]
}

model Post {
  id        String     @id @default(cuid())
  title     String
  content   String
  likecount Int        @default(0)
  published Boolean    @default(false)
  author    User       @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  likedBy   User[]     @relation("userLikes")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  PostLike  PostLike[]
}

model PostLike {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, postId]) // Ensure a user can only like a post once
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
